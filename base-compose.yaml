networks:
  sus-integrated-network:
    name: sus-integrated-network
  sus-manager-network:
    name: sus-manager-network
  sus-unity-network:
    name: sus-unity-network
  sus-scheduling-network:
    name: sus-scheduling-network
  sus-patient-record-network:
    name: sus-patient-record-network
  rabbitmq_go_net:
    name: rabbitmq_go_net

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net

  sus-integrated-db:
    container_name: postgres-sus-integrated
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./sus_integrated/data/db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sus_integrated_database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - TZ=America/Sao_Paulo
    ports:
      - "5432:5432"
    networks:
      - sus-integrated-network

  sus-integrated-app:
    container_name: java-sus-integrated
    image: maven:3.8.4-openjdk-17
    volumes:
      - ./sus_integrated:/app
    working_dir: /app
    command: bash -c "mvn clean install && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar target/sus_integrated.jar"
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8080:8080"
      - "5005:5005"
    networks:
      - sus-integrated-network
      - rabbitmq_go_net
    depends_on:
      - sus-integrated-db

  sus-manager-db:
    container_name: postgres-sus-manager
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./sus_manager/data/db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sus_manager_database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - TZ=America/Sao_Paulo
    ports:
      - "5433:5432"
    networks:
      - sus-manager-network

  sus-manager-app:
    container_name: java-sus-manager
    image: maven:3.8.4-openjdk-17
    volumes:
      - ./sus_manager:/app
    working_dir: /app
    command: bash -c "mvn clean install && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar target/SusManager.jar"
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8081:8080"
      - "5006:5005"
    networks:
      - sus-manager-network
      - rabbitmq_go_net
    depends_on:
      - sus-manager-db

  sus-unity-db:
    container_name: postgres-sus-unity
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./sus_unity/data/db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sus_unity_database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - TZ=America/Sao_Paulo
    ports:
      - "5434:5432"
    networks:
      - sus-unity-network

  sus-unity-app:
    container_name: java-sus-unity
    image: maven:3.8.4-openjdk-17
    volumes:
      - ./sus_unity:/app
    working_dir: /app
    command: bash -c "mvn clean install && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar target/sus_unity.jar"
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - "8082:8080"
      - "5007:5005"
    networks:
      - sus-unity-network
      - rabbitmq_go_net
    depends_on:
      - sus-unity-db

  sus-scheduling-db:
    container_name: postgres-sus-scheduling
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./sus_scheduling/data/db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sus_scheduling_database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - TZ=America/Sao_Paulo
    ports:
      - "5435:5432"
    networks:
      - sus-scheduling-network

  mongodb-scheduling:
    container_name: mongodb-scheduling
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./sus_scheduling/data/db/mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - "27017:27017"
    networks:
      - sus-scheduling-network

  sus-scheduling-app:
    container_name: java-sus-scheduling
    image: maven:3.8.4-openjdk-17
    volumes:
      - ./sus_scheduling:/app
    working_dir: /app
    command: bash -c "mvn clean install && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar target/sus_scheduling.jar"
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB_URI=mongodb://admin:secret@mongodb-scheduling:27017/sus_scheduling?authSource=admin
    ports:
      - "8083:8080"
      - "5008:5005"
    networks:
      - sus-scheduling-network
      - rabbitmq_go_net
    depends_on:
      - mongodb-scheduling

  sus-patient-record-db:
    container_name: postgres-sus-patient-record
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - ./sus_patient_record/data/db/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=sus_patient-record_database
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=myuser
      - TZ=America/Sao_Paulo
    ports:
      - "5436:5432"
    networks:
      - sus-patient-record-network

  mongodb-patient-record:
    container_name: mongodb-patient-record
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./sus_patient_record/data/db/mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - "27018:27017"
    networks:
      - sus-patient-record-network

  sus-patient-record-app:
    container_name: java-sus-patient-record
    image: maven:3.8.4-openjdk-17
    volumes:
      - ./sus_patient_record:/app
    working_dir: /app
    command: bash -c "mvn clean install && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar target/sus_patient_record.jar"
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_MONGODB_URI=mongodb://admin:secret@mongodb-patient-record:27017/sus_patient_record?authSource=admin
    ports:
      - "8084:8080"
      - "5009:5005"
    networks:
      - sus-patient-record-network
      - rabbitmq_go_net
    depends_on:
      - mongodb-patient-record